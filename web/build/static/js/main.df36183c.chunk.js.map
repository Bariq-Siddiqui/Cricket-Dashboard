{"version":3,"sources":["components/admin.jsx","components/user.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseURL","window","location","hostname","split","Admin","useState","tournament","tournamentDate","teamA","teamARun","teamAOvr","teamAWkt","batsmanA","batsmanARun","batsmanABall","batsmanB","batsmanBRun","batsmanBBall","teamB","teamBRun","teamBWkt","teamBOvr","bowlerB","bowlerBW","bowlerBRun","bowlerBOver","bowlerC","bowlerCW","bowlerCRun","bowlerCOver","description","commentary","playerTeam","Pakistan","Australia","England","India","Afghanistan","Bangladesh","score","setScore","useEffect","axios","get","then","res","console","log","data","socket","io","on","message","close","submit","a","preventDefault","post","alert","Grid","container","spacing","alignItems","textAlign","padding","justifyContent","item","xs","sm","md","lg","style","color","onSubmit","autoComplete","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TextField","id","label","variant","type","name","value","onChange","e","prev","target","align","TableBody","display","map","player","i","colSpan","fullWidth","Button","onClick","User","posts","setPosts","wrap","marginTop","className","sx","minWidth","bgcolor","parseInt","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXAiBMA,EAAqD,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GADxC,wBACmE,GAokChEC,MA9jCf,WAAkB,IAAD,QACjB,EAA0BC,mBAAS,CAC3BC,WAAY,GACZC,eAAgB,GAChBC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,aAAc,GACdC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbC,QAAS,GACTC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbC,YAAa,GACbC,WAAY,KA1BpB,mBA4BMC,GA5BN,UA4BiB,CACbC,SAAS,CACL,gBACA,aACA,cACA,eACA,aACA,gBACA,iBACA,cACA,aACA,kBACA,kBAEJC,UAAU,CACN,cACA,eACA,cACA,gBACA,iBACA,eACA,cACA,cACA,iBACA,aACA,kBAEJC,QAAQ,CACJ,YACA,cACA,cACA,iBACA,cACA,mBACA,YACA,eACA,eACA,cACA,eAEJ,cAAc,CACV,iBACA,iBACA,eACA,kBACA,iBACA,cACA,mBACA,aACA,YACA,cACA,eAEJC,MAAM,CACF,WACA,eACA,eACA,gBACA,cACA,cACA,kBACA,sBACA,iBACA,iBACA,kBAEJ,eAAe,CACX,kBACA,iBACA,kBACA,eACA,eACA,iBACA,wBACA,iBACA,gBACA,cACA,iBAEJC,YAAY,CACR,oBACA,mBACA,gBACA,oBACA,qBACA,gBACA,gBACA,cACA,cACA,mBACA,iBAEJC,WAAW,CACP,gBACA,YACA,wBACA,kBACA,kBACA,cACA,gBACA,eACA,eACA,cACA,kBAEJ,YAAY,CACR,kBACA,eACA,mBACA,sBACA,mBACA,gBACA,oBACA,mBACA,sBACA,qBACA,mBAEJ,cAAc,CACV,cACA,aACA,gBACA,iBACA,kBACA,kBACA,iBACA,gBACA,eACA,eACA,kBAIR,EAA0BjC,mBAAS,CAC3BC,WAAY,GACZC,eAAgB,GAChBC,MAAO,GA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","file":"static/js/main.df36183c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport Grid from '@mui/material/Grid';\r\nimport io from 'socket.io-client';\r\nimport {useFormik} from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { red,blue,purple } from '@mui/material/colors';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Box } from '@mui/system';\r\nimport Paper from '@mui/material/Paper';\r\nconst dev = 'http://localhost:5000';\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\n// import OutlinedInput from '@mui/material/OutlinedInput';\r\n// import InputLabel from '@mui/material/InputLabel';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n// import Select from '@mui/material/Select';\r\n// import { useTheme } from '@mui/material/styles';\r\nfunction Admin() {\r\nconst [posts, setPosts] = useState({\r\n        tournament: \"\",\r\n        tournamentDate: \"\",\r\n        teamA: \"\",\r\n        teamARun: \"\",\r\n        teamAOvr: \"\",\r\n        teamAWkt: \"\",\r\n        batsmanA: \"\",            \r\n        batsmanARun: \"\",\r\n        batsmanABall: \"\",\r\n        batsmanB: \"\",\r\n        batsmanBRun: \"\",\r\n        batsmanBBall: \"\",\r\n        teamB: \"\",\r\n        teamBRun: \"\",\r\n        teamBWkt: \"\",\r\n        teamBOvr: \"\",\r\n        bowlerB: \"\",\r\n        bowlerBW: \"\",\r\n        bowlerBRun: \"\",\r\n        bowlerBOver: \"\",\r\n        bowlerC: \"\",\r\n        bowlerCW: \"\",\r\n        bowlerCRun: \"\",\r\n        bowlerCOver: \"\",\r\n        description: \"\",\r\n        commentary: \"\"\r\n});\r\nconst playerTeam={\r\n    Pakistan:[\r\n        \"Sharjeel Khan\",\r\n        \"Baber Azam\",\r\n        \"Rizwan Khan\",\r\n        \"Fakhar Zaman\",\r\n        \"Haider Ali\",\r\n        \"Khushdil Shah\",\r\n        \"Mohammad Nawaz\",\r\n        \"Shadab Khan\",\r\n        \"Hassan Ali\",\r\n        \"Mohammad Waseem\",\r\n        \"Shaheen Afridi\"\r\n    ],\r\n    Australia:[\r\n        \"Aaron Finch\",\r\n        \"David Warner\",\r\n        \"Steve Smith\",\r\n        \"Glenn Maxwell\",\r\n        \"Marcus Stoinis\",\r\n        \"Matthew Wade\",\r\n        \"Ashton Agar\",\r\n        \"Pat Cummins\",\r\n        \"Mitchell Starc\",\r\n        \"Adam Zampa\",\r\n        \"Josh Hazlewood\"\r\n    ],\r\n    England:[\r\n        \"Jason ROy\",\r\n        \"Jos Buttler\",\r\n        \"Dawid Malan\",\r\n        \"Jonny Bairstow\",\r\n        \"Eion Morgan\",\r\n        \"Liam Livingstone\",\r\n        \"Moeen Ali\",\r\n        \"Chris Woakes\",\r\n        \"Chris Jordan\",\r\n        \"Adil Rashid\",\r\n        \"Tymal Mills\"\r\n    ],\r\n    \"New Zealand\":[\r\n        \"Martin Guptill\",\r\n        \"Daryl Mitchell\",\r\n        \"Devon Conway\",\r\n        \"Kane Williamson\",\r\n        \"Glenn Phillips\",\r\n        \"Tim Seifert\",\r\n        \"Mitchell Santner\",\r\n        \"Adam Milne\",\r\n        \"Ish Sodhi\",\r\n        \"Trent Boult\",\r\n        \"Tim Southee\"\r\n    ],\r\n    India:[\r\n        \"KL Rahul\",\r\n        \"Rohit Sharma\",\r\n        \"Rishabh Pant\",\r\n        \"Hardik Pandya\",\r\n        \"Virat Kohli\",\r\n        \"Surya Kumar\",\r\n        \"Ravindra Jadeja\",\r\n        \"Ravichandran Ashwin\",\r\n        \"Shardul Thakur\",\r\n        \"Mohammad Shami\",\r\n        \"Jasprit Bumrah\"\r\n    ],\r\n    \"South Africa\":[\r\n        \"Quinton De Cock\",\r\n        \"Aiden Markaram\",\r\n        \"Reeza Hendricks\",\r\n        \"David Miller\",\r\n        \"Temba Bavuma\",\r\n        \"Bjorn Forttuin\",\r\n        \"Rassie van der Dussen\",\r\n        \"Tabraiz Shamsi\",\r\n        \"Anrich Nortje\",\r\n        \"Lungi Ngidi\",\r\n        \"Kagiso Rabada\"\r\n    ],\r\n    Afghanistan:[\r\n        \"Hazratullah Zazai\",\r\n        \"Mohammad Shahzad\",\r\n        \"Gulbadin Naib\",\r\n        \"Najibullah Zadran\",\r\n        \"Rahmanullah Gurbaz\",\r\n        \"Mohammad Nabi\",\r\n        \"Asghar Afghan\",\r\n        \"Karim Janat\",\r\n        \"Rashid Khan\",\r\n        \"Mujeeb Ur Rahman\",\r\n        \"Naveen ul Haq\"\r\n    ],\r\n    Bangladesh:[\r\n        \"Mohammad Naim\",\r\n        \"Liton Das\",\r\n        \"Najmul Hossain Shanto\",\r\n        \"Mushfiqur Rahim\",\r\n        \"Shakib Al Hasan\",\r\n        \"Mohmudullah\",\r\n        \"Soumya Sarkar\",\r\n        \"Afif Hossain\",\r\n        \"Taskin Ahmed\",\r\n        \"Nasum Ahmed\",\r\n        \"Shoriful Islam\"\r\n    ],\r\n    \"Sri Lanka\":[\r\n        \"Pathum Nissanka\",\r\n        \"Kusal Perera\",\r\n        \"Avishka Fernando\",\r\n        \"Dhananjaya de Silva\",\r\n        \"Dinesh Chandimal\",\r\n        \"Dasun Shanaka\",\r\n        \"Wanindu Hasaranga\",\r\n        \"Charith Asalanka\",\r\n        \"Chamika Karunaratne\",\r\n        \"Maheesh Theekshana\",\r\n        \"Binura Fernando\"\r\n    ],\r\n    \"West Indies\":[\r\n        \"Chris Gayle\",\r\n        \"Evin Lewis\",\r\n        \"Lendl Simmons\",\r\n        \"Andre Fletcher\",\r\n        \"Shimron Hetmyer\",\r\n        \"Nicholas Pooran\",\r\n        \"Kieron Pollard\",\r\n        \"Andre Russell\",\r\n        \"Dwayne Bravo\",\r\n        \"Jason Holder\",\r\n        \"Ravi Rampaul\"\r\n    ]\r\n}\r\n\r\nconst [score, setScore] = useState({\r\n        tournament: \"\",\r\n        tournamentDate: \"\",\r\n        teamA: \"\",\r\n        teamARun: 0,\r\n        teamAOvr: 0,\r\n        teamAWkt: 0,\r\n        batsmanA: \"\",            \r\n        batsmanARun: 0,\r\n        batsmanABall: 0,\r\n        batsmanB: 0,\r\n        batsmanBRun: 0,\r\n        batsmanBBall: 0,\r\n        teamB: \"\",\r\n        teamBRun: 0,\r\n        teamBWkt: 0,\r\n        teamBOvr: 0,\r\n        bowlerB: \"\",\r\n        bowlerBW: 0,\r\n        bowlerBRun: 0,\r\n        bowlerBOver: 0,\r\n        bowlerC: \"\",\r\n        bowlerCW: 0,\r\n        bowlerCRun: 0,\r\n        bowlerCOver: 0,\r\n        description: \"\",\r\n        commentary: \"\"\r\n});\r\n\r\n    // useEffect(() => {\r\n    //     axios.get(`${baseURL}/api/v1/posts?page=0`)\r\n    //         .then((res) => {\r\n    //             setScore(res.data)\r\n    //             // console.log(\"MY data of posts\",score)\r\n\r\n    //         })\r\n    // }, [])\r\n    useEffect(() => {\r\n        axios.get(`${baseURL}/api/v1/posts?page=0`)\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setScore(res.data[0])\r\n                console.log(\"abc\",res.data[0])\r\n            })\r\n    }, [])\r\n    useEffect(() => {\r\n        const socket = io(\"\"); // to connect with locally running Socker.io server\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n        socket.on('POSTS', function (data) {\r\n            console.log(data);\r\n            setScore(data)        \r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n    // const formik = useFormik({\r\n    //     initialValues:{\r\n    //         tournament: \"\",\r\n    //         tournamentDate: \"\",\r\n    //         teamA: \"\",\r\n    //         teamARun: \"\",\r\n    //         teamAOvr: \"\",\r\n    //         teamAWkt: \"\",\r\n    //         batsmanA: \"\",            \r\n    //         batsmanARun: \"\",\r\n    //         batsmanABall: \"\",\r\n    //         batsmanB: \"\",\r\n    //         batsmanBRun: \"\",\r\n    //         batsmanBBall: \"\",\r\n    //         teamB: \"\",\r\n    //         teamBRun: \"\",\r\n    //         teamBWkt: \"\",\r\n    //         teamBOvr: \"\",\r\n    //         bowlerB: \"\",\r\n    //         bowlerBW: \"\",\r\n    //         bowlerBRun: \"\",\r\n    //         bowlerBOver: \"\",\r\n    //         bowlerC: \"\",\r\n    //         bowlerCW: \"\",\r\n    //         bowlerCRun: \"\",\r\n    //         bowlerCOver: \"\",\r\n    //         description: \"\",\r\n    //         commentary: \"\"\r\n    //     },\r\n    //     onSubmit: onSubmitFunction\r\n    // })\r\n    // function onSubmitFunction(values){\r\n    //         axios.post(`${baseURL}/api/v1/post`, {\r\n    //             tournament: values.tournament,\r\n    //             tournamentDate: values.tournamentDate,\r\n    //             teamA: values.teamA,\r\n    //             teamARun: values.teamARun,\r\n    //             teamAOvr: values.teamAOvr,\r\n    //             teamAWkt: values.teamAWkt,\r\n    //             batsmanA: values.batsmanA,\r\n    //             batsmanARun: values.batsmanARun,\r\n    //             batsmanABall: values.batsmanABall,\r\n    //             batsmanB: values.batsmanB,\r\n    //             batsmanBRun: values.batsmanBRun,\r\n    //             batsmanBBall: values.batsmanBBall,\r\n    //             teamB: values.teamB,\r\n    //             teamBRun: values.teamBRun,\r\n    //             teamBWkt: values.teamBWkt,\r\n    //             teamBOvr: values.teamBOvr,\r\n    //             bowlerB: values.bowlerB,\r\n    //             bowlerBW: values.bowlerBW,\r\n    //             bowlerBRun: values.bowlerBRun,\r\n    //             bowlerBOver: values.bowlerBOver,\r\n    //             bowlerC: values.bowlerC,\r\n    //             bowlerCW: values.bowlerCW,\r\n    //             bowlerCRun: values.bowlerCRun,\r\n    //             bowlerCOver: values.bowlerCOver,\r\n    //             description: values.description,\r\n    //             commentary: values.commentary\r\n    //         })\r\n    //             .then((res) => {\r\n    //                 console.log(\"res: \", res.data);\r\n    //                 alert(\"post created\");\r\n\r\n    //         })\r\n    // }\r\n    const submit = (a) => {\r\n        a.preventDefault()\r\n        axios.post(`${baseURL}/api/v1/post`,{\r\n            tournament: score.tournament,\r\n            tournamentDate: score.tournamentDate,\r\n            teamA: score.teamA,\r\n            teamARun: score.teamARun,\r\n            teamAOvr: score.teamAOvr,\r\n            teamAWkt: score.teamAWkt,\r\n            batsmanA: score.batsmanA,            \r\n            batsmanARun: score.batsmanARun,\r\n            batsmanABall: score.batsmanABall,\r\n            batsmanB: score.batsmanB,\r\n            batsmanBRun: score.batsmanBRun,\r\n            batsmanBBall: score.batsmanBBall,\r\n            teamB: score.teamB,\r\n            teamBRun: score.teamBRun,\r\n            teamBWkt: score.teamBWkt,\r\n            teamBOvr: score.teamBOvr,\r\n            bowlerB: score.bowlerB,\r\n            bowlerBW: score.bowlerBW,\r\n            bowlerBRun: score.bowlerBRun,\r\n            bowlerBOver: score.bowlerBOver,\r\n            bowlerC: score.bowlerC,\r\n            bowlerCW: score.bowlerCW,\r\n            bowlerCRun: score. bowlerCRun,\r\n            bowlerCOver: score.bowlerCOver,\r\n            description: score.description,\r\n            commentary: score.commentary\r\n    })\r\n            .then((res) => {\r\n                console.log(\"res: \", res.data);\r\n                    alert(\"post created\");\r\n\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container spacing={2} alignItems=\"center\" textAlign='center' padding='2%' justifyContent=\"center\">\r\n                <Grid item xs={11} sm={11} md={11} lg={11}>\r\n                    <h1 style={{color: \"purple\"}}> Admin Panel </h1>\r\n                    {/* <form onSubmit={formik.handleSubmit}> */} \r\n                    <form onSubmit={submit} autoComplete=\"off\" component=\"Box\">\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                // width=\"50%\"\r\n                                                color=\"secondary\"\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Tournament Name\"\r\n                                                variant=\"standard\"\r\n                                                type = \"TextField\"\r\n                                                name=\"tournament\"\r\n\r\n                                                value={score?.tournament}\r\n                                                onChange={(e) => {\r\n                                                    setScore((prev) => {\r\n                                                    return { ...prev, tournament: e.target.value }\r\n                                                    })\r\n                                                }}\r\n                                                // value={formik.values.tournament}\r\n                                                // onChange={formik.handleChange}\r\n\r\n                                                // error={formik.touched.tournament && Boolean(formik.errors.tournament)}\r\n                                                // helperText={formik.touched.tournament && formik.errors.tournament}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <TextField\r\n                                                // \r\n                                                color=\"secondary\"\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Tournament Date\"\r\n                                                variant=\"standard\"\r\n                                                type = \"date\"\r\n                                                name=\"tournamentDate\"\r\n                                                value={score.tournamentDate}\r\n                                                onChange={(e) => {\r\n                                                setScore((prev) => {\r\n                                                    return { ...prev, tournamentDate: e.target.value }\r\n                                                })\r\n                                                }}\r\n                                                // value={formik.values.tournamentDate}\r\n                                                // onChange={formik.handleChange}\r\n                                                // error={formik.touched.tournamentDate && Boolean(formik.errors.tournamentDate)}\r\n                                                // helperText={formik.touched.tournamentDate && formik.errors.tournamentDate}\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">\r\n                                            <strong>Batting Team</strong>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <strong>Bowling Team</strong>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">\r\n                                            \r\n                                            \r\n                                            \r\n                                            \r\n                                            \r\n                                            \r\n                                            <label style={{display: 'block'}}>\r\n                                                <strong>Team Batting</strong>\r\n                                            </label>\r\n                                            <select\r\n                                                name=\"teamA\"\r\n                                                value={score.teamA}\r\n                                                onChange={(e) => {\r\n                                                    setScore((prev) => {\r\n                                                    return { ...prev, teamA: e.target.value }\r\n                                                    })\r\n                                                }}\r\n                                                style={{}}\r\n                                            >\r\n                                                <option value=\"\" label=\"Select a Team\" />\r\n                                                <option value=\"Pakistan\" label=\"Pakistan\" />\r\n                                                <option value=\"Australia\" label=\"Australia\" />\r\n                                                <option value=\"England\" label=\"England\" />\r\n                                                <option value=\"New Zealand\" label=\"New Zealand\" />\r\n                                                <option value=\"India\" label=\"India\" />\r\n                                                <option value=\"South Africa\" label=\"South Africa\" />\r\n                                                <option value=\"Afghanistan\" label=\"Afghanistan\" />\r\n                                                <option value=\"Bangladesh\" label=\"Bangladesh\" />\r\n                                                <option value=\"Sri Lanka\" label=\"Sri Lanka\" />\r\n                                                <option value=\"West Indies\" label=\"West Indies\" />\r\n                                            </select>\r\n\r\n                                        {/* <TextField\r\n                                        color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Team A\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"teamA\"\r\n\r\n                            value={score.teamA}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, teamA: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.teamA}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.teamA && Boolean(formik.errors.teamA)}\r\n                            // helperText={formik.touched.teamA && formik.errors.teamA}\r\n                        /> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                        <label style={{display: 'block'}}>\r\n                                                <strong>Team</strong>\r\n                                            </label>\r\n                                            <select\r\n                                                name=\"teamB\"\r\n                                                value={score.teamB}\r\n                                                onChange={(e) => {\r\n                                                    setScore((prev) => {\r\n                                                    return { ...prev, teamB: e.target.value }\r\n                                                    })\r\n                                                }}\r\n                                                style={{}}\r\n                                            >\r\n                                                <option value=\"\" label=\"Select a Team\" />\r\n                                                <option value=\"Pakistan\" label=\"Pakistan\" />\r\n                                                <option value=\"Australia\" label=\"Australia\" />\r\n                                                <option value=\"England\" label=\"England\" />\r\n                                                <option value=\"New Zealand\" label=\"New Zealand\" />\r\n                                                <option value=\"India\" label=\"India\" />\r\n                                                <option value=\"South Africa\" label=\"South Africa\" />\r\n                                                <option value=\"Afghanistan\" label=\"Afghanistan\" />\r\n                                                <option value=\"Bangladesh\" label=\"Bangladesh\" />\r\n                                                <option value=\"Sri Lanka\" label=\"Sri Lanka\" />\r\n                                                <option value=\"West Indies\" label=\"West Indies\" />\r\n                                            </select>\r\n\r\n                                        {/* <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Team B\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"teamB\"\r\n                            value={score.teamB}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, teamB: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.teamB}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.teamB && Boolean(formik.errors.teamB)}\r\n                            // helperText={formik.touched.teamB && formik.errors.teamB}\r\n                        /> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Team A Runs\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"teamARun\"\r\n\r\n                            value={score.teamARun}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, teamARun: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.teamARun}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.teamARun && Boolean(formik.errors.teamARun)}\r\n                            // helperText={formik.touched.teamARun && formik.errors.teamARun}\r\n                        />&nbsp;&nbsp;&nbsp;<TextField\r\n                            \r\n                        color=\"secondary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Team A Wicket\"\r\n                        variant=\"standard\"\r\n                        type = \"number\"\r\n                        name=\"teamAWkt\"\r\n                        value={score.teamAWkt}\r\n                        onChange={(e) => {\r\n                            setScore((prev) => {\r\n                            return { ...prev, teamAWkt: e.target.value }\r\n                            })\r\n                        }}\r\n\r\n                        // value={formik.values.teamAWkt}\r\n                        // onChange={formik.handleChange}\r\n\r\n                        // error={formik.touched.teamAWkt && Boolean(formik.errors.teamAWkt)}\r\n                        // helperText={formik.touched.teamAWkt && formik.errors.teamAWkt}\r\n                    />     &nbsp;&nbsp;&nbsp;\r\n                       <TextField\r\n                            \r\n                    color=\"secondary\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"Team A Over\"\r\n                    variant=\"standard\"\r\n                    type = \"number\"\r\n                    name=\"teamAOvr\"\r\n\r\n                    value={score.teamAOvr}\r\n                    onChange={(e) => {\r\n                        setScore((prev) => {\r\n                        return { ...prev, teamAOvr: e.target.value }\r\n                        })\r\n                    }}\r\n                    // value={formik.values.teamAOvr}\r\n                    // onChange={formik.handleChange}\r\n\r\n                    // error={formik.touched.teamAOvr && Boolean(formik.errors.teamAOvr)}\r\n                    // helperText={formik.touched.teamAOvr && formik.errors.teamAOvr}\r\n                />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n\r\n                                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Team B Runs\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"teamBRun\"\r\n                            value={score.teamBRun}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, teamBRun: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.teamBRun}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.teamBRun && Boolean(formik.errors.teamBRun)}\r\n                            // helperText={formik.touched.teamBRun && formik.errors.teamBRun}\r\n                        />&nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Team B Wicket\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"teamBWkt\"\r\n                            value={score.teamBWkt}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, teamBWkt: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.teamBWkt}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.teamBWkt && Boolean(formik.errors.teamBWkt)}\r\n                            // helperText={formik.touched.teamBWkt && formik.errors.teamBWkt}\r\n                        />&nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Team B Over\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"teamBOvr\"\r\n\r\n                            value={score.teamBOvr}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, teamBOvr: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.teamBOvr}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.teamBOvr && Boolean(formik.errors.teamBOvr)}\r\n                            // helperText={formik.touched.teamBOvr && formik.errors.teamBOvr}\r\n                        />\r\n                        \r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    \r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                        <label style={{display: 'block'}}>\r\n                                                <strong>Batsman A</strong>\r\n                                            </label>\r\n                                            <select\r\n                                                name=\"batsmanA\"\r\n                                                value={score.batsmanA}\r\n                                                onChange={(e) => {\r\n                                                    setScore((prev) => {\r\n                                                    return { ...prev, batsmanA: e.target.value }\r\n                                                    })\r\n                                                }}\r\n                                                style={{}}\r\n                                            >\r\n                                                {playerTeam[score.teamA]?.map((player,i)=>(\r\n                                                <option key={i} value={player} label={player} />\r\n                                                ))}\r\n                                            </select>\r\n                                        {/* <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Batsman A\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"batsmanA\"\r\n                            value={score.batsmanA}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, batsmanA: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.batsmanA}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.batsmanA && Boolean(formik.errors.batsmanA)}\r\n                            // helperText={formik.touched.batsmanA && formik.errors.batsmanA}\r\n                        /> */}\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Batsman A Run\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"batsmanARun\"\r\n\r\n                            value={score.batsmanARun}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, batsmanARun: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.batsmanARun}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.batsmanARun && Boolean(formik.errors.batsmanARun)}\r\n                            // helperText={formik.touched.batsmanARun && formik.errors.batsmanARun}\r\n                        />&nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Batsman A Ball\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"batsmanABall\"\r\n                            value={score.batsmanABall}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, batsmanABall: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.batsmanABall}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.batsmanABall && Boolean(formik.errors.batsmanABall)}\r\n                            // helperText={formik.touched.batsmanABall && formik.errors.batsmanABall}\r\n                        />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                        <label style={{display: 'block'}}>\r\n                                                <strong>Bowler A</strong>\r\n                                            </label>\r\n                                            <select\r\n                                                name=\"bowlerB\"\r\n                                                value={score.bowlerB}\r\n                                                onChange={(e) => {\r\n                                                    setScore((prev) => {\r\n                                                    return { ...prev, bowlerB: e.target.value }\r\n                                                    })\r\n                                                }}\r\n                                                style={{}}\r\n                                            >\r\n                                                {playerTeam[score.teamB]?.map((player,i)=>(\r\n                                                <option key={i} value={player} label={player} />\r\n                                                ))}\r\n                                            </select>\r\n                                        {/* <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Bowler B\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"bowlerB\"\r\n                            value={score.bowlerB}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, bowlerB: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.bowlerB}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.bowlerB && Boolean(formik.errors.bowlerB)}\r\n                            // helperText={formik.touched.bowlerB && formik.errors.bowlerB}\r\n                        /> */}\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Bowler B Wicket\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"bowlerBW\"\r\n\r\n                            value={score.bowlerBW}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, bowlerBW: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.bowlerBW}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.bowlerBW && Boolean(formik.errors.bowlerBW)}\r\n                            // helperText={formik.touched.bowlerBW && formik.errors.bowlerBW}\r\n                        />&nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Bowler B Run\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"bowlerBRun\"\r\n                            value={score.bowlerBRun}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, bowlerBRun: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.bowlerBRun}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.bowlerBRun && Boolean(formik.errors.bowlerBRun)}\r\n                            // helperText={formik.touched.bowlerBRun && formik.errors.bowlerBRun}\r\n                        />&nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Bowler B Over\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"bowlerBOver\"\r\n\r\n                            value={score.bowlerBOver}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, bowlerBOver: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.bowlerBOver}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.bowlerBOver && Boolean(formik.errors.bowlerBOver)}\r\n                            // helperText={formik.touched.bowlerBOver && formik.errors.bowlerBOver}\r\n                        />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            <label style={{display: 'block'}}>\r\n                                                <strong>Batsman B</strong>\r\n                                            </label>\r\n                                            <select\r\n                                                name=\"batsmanB\"\r\n                                                value={score.batsmanB}\r\n                                                onChange={(e) => {\r\n                                                    setScore((prev) => {\r\n                                                    return { ...prev, batsmanB: e.target.value }\r\n                                                    })\r\n                                                }}\r\n                                                style={{}}\r\n                                            >\r\n                                                {playerTeam[score.teamA]?.map((player,i)=>(\r\n                                                <option key={i} value={player} label={player} />\r\n                                                ))}\r\n                                            </select>\r\n\r\n                                        {/* <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"\"\r\n                            label=\"Batsman B\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"batsmanB\"\r\n                            value={score.batsmanB}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, batsmanB: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.batsmanB}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.batsmanB && Boolean(formik.errors.batsmanB)}\r\n                            // helperText={formik.touched.batsmanB && formik.errors.batsmanB}\r\n                        /> */}\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Batsman B Run\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"batsmanBRun\"\r\n                            value={score.batsmanBRun}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, batsmanBRun: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.batsmanBRun}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.batsmanBRun && Boolean(formik.errors.batsmanBRun)}\r\n                            // helperText={formik.touched.batsmanBRun && formik.errors.batsmanBRun}\r\n                        />&nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Batsman B Ball\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"batsmanBBall\"\r\n\r\n                            value={score.batsmanBBall}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, batsmanBBall: e.target.value }\r\n                                })\r\n                            }}\r\n\r\n                            // value={formik.values.batsmanBBall}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.batsmanBBall && Boolean(formik.errors.batsmanBBall)}\r\n                            // helperText={formik.touched.batsmanBBall && formik.errors.batsmanBBall}\r\n                        />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <label style={{display: 'block'}}>\r\n                                                <strong>Bowler C</strong>\r\n                                            </label>\r\n                                            <select\r\n                                                name=\"bowlerC\"\r\n                                                value={score.bowlerC}\r\n                                                onChange={(e) => {\r\n                                                    setScore((prev) => {\r\n                                                    return { ...prev, bowlerC: e.target.value }\r\n                                                    })\r\n                                                }}\r\n                                                style={{}}\r\n                                            >\r\n                                                {playerTeam[score.teamB]?.map((player,i)=>(\r\n                                                <option key={i} value={player} label={player} />\r\n                                                ))}\r\n                                            </select>\r\n\r\n{/* \r\n                                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Bowler C\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"bowlerC\"\r\n\r\n                            value={score.bowlerC}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, bowlerC: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.bowlerC}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.bowlerC && Boolean(formik.errors.bowlerC)}\r\n                            // helperText={formik.touched.bowlerC && formik.errors.bowlerC}\r\n                        /> */}\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Bowler C Wicket\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"bowlerCW\"\r\n                            value={score.bowlerCW}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, bowlerCW: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.bowlerCW}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.bowlerCW && Boolean(formik.errors.bowlerCW)}\r\n                            // helperText={formik.touched.bowlerCW && formik.errors.bowlerCW}\r\n                        />&nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Bowler C Run\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"bowlerCRun\"\r\n                            value={score.bowlerCRun}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, bowlerCRun: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.bowlerCRun}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.bowlerCRun && Boolean(formik.errors.bowlerCRun)}\r\n                            // helperText={formik.touched.bowlerCRun && formik.errors.bowlerCRun}\r\n                        />&nbsp;&nbsp;&nbsp;\r\n                        <TextField\r\n                            \r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Bowler C Over\"\r\n                            variant=\"standard\"\r\n                            type = \"number\"\r\n                            name=\"bowlerCOver\"\r\n                            value={score.bowlerCOver}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, bowlerCOver: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.bowlerCOver}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.bowlerCOver && Boolean(formik.errors.bowlerCOver)}\r\n                            // helperText={formik.touched.bowlerCOver && formik.errors.bowlerCOver}\r\n                        />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    \r\n                                    <TableRow>\r\n                                        <TableCell colSpan=\"2\" align=\"center\">\r\n                                        <TextField\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Match Description\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"description\"\r\n                            value={score.description}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, description: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.description}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.description && Boolean(formik.errors.description)}\r\n                            // helperText={formik.touched.description && formik.errors.description}\r\n                        />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <TableRow>\r\n                                        <TableCell colSpan=\"2\" align=\"center\">\r\n                                        <TextField\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Commentary\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"commentary\"\r\n                      \r\n                            value={score.commentary}\r\n                            onChange={(e) => {\r\n                                setScore((prev) => {\r\n                                return { ...prev, commentary: e.target.value }\r\n                                })\r\n                            }}\r\n                            // value={formik.values.commentary}\r\n                            // onChange={formik.handleChange}\r\n\r\n                            // error={formik.touched.commentary && Boolean(formik.errors.commentary)}\r\n                            // helperText={formik.touched.commentary && formik.errors.commentary}\r\n                        />\r\n\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan=\"2\" align=\"center\">\r\n                                            <Button  variant=\"contained\" color=\"secondary\" onClick={submit}>Post</Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        \r\n<br />\r\n                    {/* </form> */}\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Admin;","// import * as React from 'react';\r\nimport axios from 'axios';\r\n// import \"./../app.css\";\r\nimport io from 'socket.io-client';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nconst dev = 'http://localhost:5000';\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\";\r\nfunction User() {\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`${baseURL}/api/v1/posts?page=0`)\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setPosts(res.data)\r\n                console.log(posts)\r\n\r\n            })\r\n    }, [])\r\n    useEffect(() => {\r\n        const socket = io(\"\"); // to connect with locally running Socker.io server\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n        socket.on('POSTS', function (data) {\r\n            console.log(data);\r\n            setPosts((prev) => [data, ...prev])        \r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Grid container spacing={2} alignItems=\"center\" wrap=\"wrap\" textAlign='center' padding='2%' marginTop=\"4%\" justifyContent=\"center\" >\r\n                <Grid>\r\n                    {/* <h1 style={{color: \"#2196f3\"}}>Welcome Cricket Dashboard</h1> */}\r\n                    <TableContainer component={Paper} className=\"bgImg\">\r\n                        <Table sx={{ minWidth: 320 }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow bgcolor=\"#2196f3\">\r\n                                    <TableCell colSpan=\"4\"  className=\"tableColor2\">{posts[0]?.tournament}</TableCell>\r\n                                    {/* <TableCell align=\"right\"></TableCell> */}\r\n                                    <TableCell align=\"right\" colSpan=\"1\"  className=\"tableColor2\">Date:{posts[0]?.tournamentDate}</TableCell>\r\n                                </TableRow>\r\n                                \r\n                                <TableRow>\r\n                                    <TableCell className=\"tableColor\" align=\"right\">{posts[0]?.teamA}</TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"left\">{posts[0]?.teamARun}/{posts[0]?.teamAWkt} <br />({posts[0]?.teamAOvr})</TableCell>\r\n                                    <TableCell className=\"tableColor\" align=\"right\"><br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>VS</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TableCell>\r\n                                    <TableCell className=\"tableColor\" align=\"right\">&nbsp;&nbsp;&nbsp;&nbsp;{posts[0]?.teamB}</TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"left\">{posts[0]?.teamBRun}/{posts[0]?.teamBWkt} <br />({posts[0]?.teamBOvr})</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className=\"tableColor1\">Team A Batting</TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\"></TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\"></TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\"></TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\">Team B Bowling</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell className=\"tableColor1\" >{posts[0]?.batsmanA} &nbsp;&nbsp;&nbsp; {posts[0]?.batsmanARun}({posts[0]?.batsmanABall})*</TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"left\"></TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\"></TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\"> </TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\"> {posts[0]?.bowlerB} &nbsp;&nbsp;&nbsp; {posts[0]?.bowlerBW}/{posts[0]?.bowlerBRun}({posts[0]?.bowlerBOver})</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell className=\"tableColor1\" >{posts[0]?.batsmanB} &nbsp;&nbsp;&nbsp; {posts[0]?.batsmanBRun}({posts[0]?.batsmanBBall})*</TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"left\"></TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\"></TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\"></TableCell>\r\n                                    <TableCell className=\"tableColor1\" align=\"right\">{posts[0]?.bowlerC} &nbsp;&nbsp;&nbsp; {posts[0]?.bowlerCW}/{posts[0]?.bowlerCRun}({posts[0]?.bowlerCOver})</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell className=\"tableColor1\" align=\"center\" colSpan=\"5\">{posts[0]?.description}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell className=\"tableColor1\" align=\"center\" colSpan=\"5\">{posts[0]?.commentary}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell className=\"tableColor1\" align=\"center\" colSpan=\"5\">Target: {parseInt(posts[0]?.teamBRun)+1}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell className=\"tableColor1\" align=\"center\" colSpan=\"5\">{posts[0]?.teamA} need to {(parseInt(posts[0]?.teamBRun)+1)-(posts[0]?.teamARun)} runs</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default User;\r\n\r\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Admin from './components/admin';\nimport User from './components/user';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/admin\">\n          <Admin />\n        </Route>\n\n        <Route path=\"/\">\n          <User />\n        </Route>\n\n      </Switch>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}